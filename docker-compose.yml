version: '2.3'
services:
  postgres:
    image: postgres:9.6
    restart: always
    volumes:
      - ./postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: airflow

  scheduler:
    build:
      context: .
      target: with-spark-optional-dag
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__FERNET_KEY: 8NE6O6RcTJpxcCkuKxOHOExzIJkXkeJKbRie03a69dI=
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql://postgres:123456@postgres:5432/airflow
      PYSPARK_SUBMIT_ARGS: --driver-memory 16g --packages com.amazonaws:aws-java-sdk:1.7.4,org.apache.hadoop:hadoop-aws:2.7.2,com.databricks:spark-csv_2.10:1.5.0,com.databricks:spark-avro_2.10:2.0.1,graphframes:graphframes:0.1.0-spark1.6 pyspark-shell
#      PYSPARK_SUBMIT_ARGS: --driver-memory 16g --packages com.databricks:spark-csv_2.11:1.5.0,com.databricks:spark-avro_2.11:3.1.0,graphframes:graphframes:0.3.0-spark2.0-s_2.11 pyspark-shell
      PYSPARK_PYTHON: /usr/local/bin/python3.5
      PIPELINE_DATA_PATH: hdfs://dsg-cluster-gw01/datasets/finnet
      PIPELINE_DATA_FORMAT: com.databricks.spark.avro
      AIRFLOW_SCHEDULER_INITDB: "true"
    command: afp-scheduler
    volumes:
      #- ./airflow_logs:/airflow/logs
      - ./dags:/airflow/dags
      - ./plugins:/airflow/plugins
      - /Users/brayanjules/.kaggle:/home/afpuser/.kaggle
      - ./datasources:/airflow/datasources
  webserver:
    build:
      context: .
      target: with-spark-optional-dag
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - scheduler
    environment:
      AIRFLOW__CORE__FERNET_KEY: 8NE6O6RcTJpxcCkuKxOHOExzIJkXkeJKbRie03a69dI=
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql://postgres:123456@postgres:5432/airflow
      AIRFLOW_USER: fixme
      AIRFLOW_EMAIL: fixme@fix.me
      AIRFLOW_PASSWORD: fixme
    ports:
      - 127.0.0.1:8080:8080
    command: afp-webserver
    volumes_from:
      - scheduler
volumes:
  postgres: {}
  airflow_logs: {}
